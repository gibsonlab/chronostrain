### Note: If using relative paths, should be based on the execution path of main python script.
[Model]
USE_QUALITY_SCORES=True

FRAG_LEN_NB_N=11186530.399297457
FRAG_LEN_NB_P=0.9999865398828846
EXTRA_STRAIN=False

SICS_DOF_1=0.1
SICS_SCALE_1=100.0
SICS_DOF=0.1
SICS_SCALE=1.0
INV_TEMPERATURE=1

# Number of CPU cores to utilize. (Provides some benefit, could be better optimized. Experimental)
NUM_CORES=4

# If "True", uses sparse matrix representation of Read-to-fragment likelihoods, and Strain-Fragment frequencies.
SPARSE_MATRICES=True
INSERTION_LL_1=-12.78589
DELETION_LL_1=-12.18627
INSERTION_LL_2=-12.56274
DELETION_LL_2=-12.22627

MIN_OVERLAP_RATIO=0.5

# Cache directory for saved computation.
CACHE_DIR=%(HOME)s/.chronostrain/cache

[Entrez]
EMAIL=

[Engine]
# Currently has no effect. Jax uses CUDA by default if available.
;DEVICE=cpu
PRNG_Key=314159
DTYPE=float32

[Database]
DB_DATA_DIR=%(CHRONOSTRAIN_DB_DIR)s
DB_PARSER_CLASS=chronostrain.database.JSONParser

[Database.ParserArgs]
# Arguments to pass to the __init__ method of the database class specified in DB_CLASS.
ENTRIES_FILE=  # This is where the generated JSON file path would go.
marker_max_len=1000000

[ExternalTools]
# Absolute file path to the aligner executable.
PAIRWISE_ALN_BACKEND=bwa
